//
//
// Adds css (bg, height, width) to use an svg icon with png fallback.
// 
// @param $filename string Must be in the compass images folder; do not include
//   the extension.
// @param $fallback_ext string Defines the extension for the fallback image.
// 
// Where icon.png and icon.svg exist in the images folder.
// @code
//   html: <div class="icon"></div>
//   sass: @include svg_icon('icon'); or @include svg_icon('icon', 'png');
// @endcode
// 
// If the files are icon.gif and icon.svg then do this:
// @code
//   html: <div class="icon"></div>
//   sass: @include svg_icon('icon', 'gif');
// @endcode
// 
// @see svg_background
// @depends Modernizr.svg
//
@mixin loft_images_svg_icon($filename, $fallback_ext: null, $dimensions: null) {
  $_fallback: _loft_images_basename($filename, $fallback_ext);
  @include loft_images_svg_background($filename, 'center', $fallback_ext);
  display: block;
  @include loft_images_dimensions($_fallback, $dimensions);
  background-size: contain;
}

// 
// Creates a scalable svg background image with fallback.
// 
// This has the benefit over an img tag  of allowing you to embed the image
// data in your stylesheet as inline svg.
// 
// @param $filename string Must be in the compass images folder; do not include
//   the extension.
// @param $fallback_ext string Defines the extension for the fallback image.
// 
// Requires the following html structure:
// @code
//   <div class="icon"><span><span></span></span></div>
//   
//   .icon {
//     loft_images_svg_scalable_icon('lion')
//   }
// @endcode
// 
@mixin loft_images_svg_scalable_icon($filename, $fallback_ext: null, $dimensions: null) {
  $_image_path : _loft_images_basename($filename, $fallback_ext);
  $_dimensions : _loft_images_dimensions($_image_path, $dimensions);
  $_width      : nth($_dimensions, 1);
  $_height     : nth($_dimensions, 2);
  
  @include loft-images-dimensions($_image_path, _dimensions);
  &>span {
    @include aspect-ratio($_width, $_height, '>span');
  }
  &>span>span>span {
    @include loft_images_svg_icon($filename, $fallback_ext, (100%, 100%));
    background-size: contain;
  }
}

//
//
// Use an svg as a background-image with raster fallback.
// 
// This does not worry about retina raster because a device that supports
// svg should also be retina so it would never fallback to the retina raster.
// 
// Consider using svg_icon instead if the element is only serving as an icon.
// This comes in handy if you're decorating, say, a title with an bg image.
// 
// * The raster image will only be downloaded if Modernizr does not detect 
// svg support.
// * The svg file will be written as a Data URI in the stylesheet, reducing the
// http requests for the page.
// 
// @param $filename string Must be in the compass images folder; do not include
//   the extension.
// @param $bg_pos string|list The background-position declaration.
// @param string $fallback_ext Usually png; omit the dot.
// 
// Where icon.png and icon.svg exist in the images folder, and have the natural
// size of 20px x 20px...
// 
// @code
//   html: <div class="icon"></div>
//   sass: @include loft_images_svg_background('icon', 'center', 20px, 20px);
// @endcode
// 
// @depends Modernizr.svg
//
@mixin loft_images_svg_background($filename, $bg_pos: 'center', $fallback_ext: null) {
  $fallback_ext: $loft_images_svg_fallback_extension !default;
  // Embeds our svg as a data uri to eliminate an http request.
  background-repeat: no-repeat;
  @include loft_images_background_position($bg_pos);
  background-image: inline-image("#{$filename}.svg", "image/svg+xml");
  html.#{$loft_images_modernizr_prefix}no-svg & {
    // Will only load this if modernizr detects no svn support.
    background-image: image-url("#{$filename}.#{$fallback_ext}");
  }
}

//
//
// Automatically applies padding based on image size (+gap) so the bg is not
// covered by the element content.
// 
// USE THIS WHEN YOU WANTING TO PLACE AN SVG IN A BACKGROUND OF SOMETHING LIKE
// A TITLE ELEMENT THAT HAS SPACE BEYOND THE ICON.
// 
// @param string $filename Without the extension.
// @param string $bg_pos Will be passed to background-position:
// @param unit $gap The gap between the icon and the content.
// @param string $fallback_ext Usually png; omit the dot.
// 
// To place an icon (alert.svg/alert.png) on the left of a title, where
// the icon has a 10px left margin and a 10px gap, try:
// @code
//   h1 {
//     loft_images_svg_smart_background('alert', (10px, center), 10px);
//   }
// @endcode
//
@mixin loft_images_svg_smart_background($filename, $bg_pos: 'center', $gap: null, $fallback_ext: null) {
  $fallback_ext: $loft_images_svg_fallback_extension !default;
  @include loft_images_svg_background($filename, $bg_pos, $fallback_ext);
  @include loft_images_smart_background("#{$filename}.#{$fallback_ext}", $bg_pos, $gap);
}
