//
// Generates the CSS needed for a raster background image with retina support.
// 
// If the image is called 'select-bg.png' then we're expecting another retina
// image with the exact same aspect ratio, twice the size under the filename
// 'select-bg@2x.png'.
// 
// @param $filename string The filename of the low res bg image, without ext.
// @param $ext string The extension of the bg file without the '.'.
// 
// @see $retina_suffix
// 
@mixin loft_images_retina_background($filename, $ext) {
  background-image: image_url($filename + '.' + $ext);
  background-size: contain;
  @media #{$loft_images_retina} {
      background-image: image_url($filename + $loft_images_retina_suffix + '.' + $ext);
  }  
}


// 
// 
// Produce a png icon with retina version when needed.
// 
// Advantage: can use a retina version
// Disadvantage: one extra request because the image can't be inline embedded.
// 
// @see retina_background
// 
@mixin loft_images_png_retina_icon($filename, $dimensions: null) {
  $_filename: "#{$filename}.png";
  display: block;
  @include loft_images_dimensions($_filename, $dimensions);  
  background-repeat: no-repeat;
  background-position: center;  
  @include loft_images_retina_background($filename, 'png');
}

//
//
// Produce a png icon with data uri in the stylesheet (no retina support).
// 
// Advantage: reduces http request by embedding png inline css.
// Disadvantage: cannot use a retina version.
//
// @see svg_icon
//
@mixin loft_images_png_icon($filename, $dimensions: null) {
  $_filename: "#{$filename}.png";
  background: inline-image($_filename, "image/png") no-repeat center;
  display: block;
  @include loft_images_dimensions($_filename, $dimensions);
  background-size: contain;
}